# examples/elevator_panel_simplified/definitions/nodes.yaml (Refactored)
# Root is a list of node definitions

- uri: "ex:InitializeRearWallNode"
  kind: "AtomicNode"
  name: "Initialize Rear Wall Assembly and Panels"
  description: "Creates RearWallAssembly and basic ElevatorPanel instances with initial dimensions based on car internal size."
  precondition: "ASK { }" # No specific graph precondition, inputs assumed available via context
  effect: "Creates domain:RearWallAssembly. Creates domain:ElevatorPanel instances linked to the assembly. Sets ex:createdRearWallAssemblyURI on a context entity (e.g., the run context)."
  inputs:
    - name: "car_internal_width"
      mapsToRdfProperty: "ex:carInternalWidth" # From initial state RDF
      datatype: "xsd:integer"
      isRequired: true
    - name: "car_internal_height"
      mapsToRdfProperty: "ex:carInternalHeight" # From initial state RDF
      datatype: "xsd:integer"
      isRequired: true
    - name: "run_context_uri" # Provided by Planner/Executor
      mapsToRdfProperty: "ex:runContextForNode" # A property on a temporary context for this node run
      datatype: "xsd:anyURI"
      isRequired: true
  outputs:
    - name: "rear_wall_assembly_uri"
      mapsToRdfProperty: "ex:createdRearWallAssemblyURI" # To be set on the run_context_uri by the script
      datatype: "xsd:anyURI"
  implementation:
    type: "kce:PythonScriptInvocation" # Use the URI from ontology
    scriptPath: "../scripts/init_rear_wall.py"

- uri: "ex:CalculatePanelDetailsNode"
  kind: "AtomicNode"
  name: "Calculate Individual Panel Details"
  description: "Calculates thickness, bending height, and final width for all panels in an assembly."
  precondition: | # Example: assembly must exist and its URI known
    PREFIX ex: <http://example.com/ns#>
    PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    PREFIX domain: <http://kce.com/example/elevator_panel#>
    ASK { ?run_context ex:createdRearWallAssemblyURI ?assembly_uri .
          ?assembly_uri rdf:type domain:RearWallAssembly . }
  effect: "Modifies domain:ElevatorPanel instances by adding ex:panelThickness, ex:bendingHeight, ex:panelWidth. Sets ex:panelDetailsCalculated on the assembly."
  inputs:
    - name: "rear_wall_assembly_uri"
      mapsToRdfProperty: "ex:createdRearWallAssemblyURI" # From run_context
      datatype: "xsd:anyURI"
      isRequired: true
  outputs:
    - name: "panels_details_calculated_flag"
      mapsToRdfProperty: "ex:panelDetailsCalculated" # On the RearWallAssembly
      datatype: "xsd:boolean"
  implementation:
    type: "kce:PythonScriptInvocation"
    scriptPath: "../scripts/calculate_panel_details.py"

- uri: "ex:CalculateBoltHolesNode"
  kind: "AtomicNode"
  name: "Calculate Bolt Holes for Panels"
  description: "Calculates the number of bolt holes for all panels in an assembly."
  precondition: |
    PREFIX ex: <http://example.com/ns#>
    ASK { ?assembly ex:panelDetailsCalculated true . }
  effect: "Modifies domain:ElevatorPanel by adding ex:boltHoleCount, ex:boltHoleDiameter. Sets ex:boltHolesCalculated on assembly."
  inputs:
    - name: "rear_wall_assembly_uri"
      mapsToRdfProperty: "ex:createdRearWallAssemblyURI"
      datatype: "xsd:anyURI"
      isRequired: true
  outputs:
    - name: "bolt_holes_calculated_flag"
      mapsToRdfProperty: "ex:boltHolesCalculated" # On the RearWallAssembly
      datatype: "xsd:boolean"
  implementation:
    type: "kce:PythonScriptInvocation"
    scriptPath: "../scripts/calculate_bolt_holes.py"

- uri: "ex:DetermineStiffenersNode"
  kind: "AtomicNode"
  name: "Determine Stiffeners for Panels"
  description: "Determines the number of stiffeners for all panels in an assembly."
  precondition: |
    PREFIX ex: <http://example.com/ns#>
    ASK { ?assembly ex:panelDetailsCalculated true . }
  effect: "Modifies domain:ElevatorPanel by adding ex:stiffenerCount. Sets ex:stiffenersDetermined on assembly."
  inputs:
    - name: "rear_wall_assembly_uri"
      mapsToRdfProperty: "ex:createdRearWallAssemblyURI"
      datatype: "xsd:anyURI"
      isRequired: true
  outputs:
    - name: "stiffeners_determined_flag"
      mapsToRdfProperty: "ex:stiffenersDetermined" # On the RearWallAssembly
      datatype: "xsd:boolean"
  implementation:
    type: "kce:PythonScriptInvocation"
    scriptPath: "../scripts/determine_stiffeners.py"

- uri: "ex:CalculateAllPanelCostsNode"
  kind: "AtomicNode"
  name: "Calculate Costs for All Panels"
  description: "Calculates material, processing, and total costs for all panels in an assembly."
  precondition: |
    PREFIX ex: <http://example.com/ns#>
    ASK {
      ?assembly ex:panelDetailsCalculated true ;
                ex:boltHolesCalculated true ;
                ex:stiffenersDetermined true .
    }
  effect: "Modifies domain:ElevatorPanel by adding costs. Sets ex:panelCostsCalculated on assembly."
  inputs:
    - name: "rear_wall_assembly_uri"
      mapsToRdfProperty: "ex:createdRearWallAssemblyURI"
      datatype: "xsd:anyURI"
      isRequired: true
  outputs:
    - name: "panel_costs_calculated_flag"
      mapsToRdfProperty: "ex:panelCostsCalculated" # On the RearWallAssembly
      datatype: "xsd:boolean"
  implementation:
    type: "kce:PythonScriptInvocation"
    scriptPath: "../scripts/calculate_panel_costs.py"

- uri: "ex:SumAssemblyCostsNode"
  kind: "AtomicNode"
  name: "Sum Total Assembly Costs"
  description: "Calculates the total cost for the entire rear wall assembly."
  precondition: |
    PREFIX ex: <http://example.com/ns#>
    ASK { ?assembly ex:panelCostsCalculated true . }
  effect: "Modifies domain:RearWallAssembly by adding ex:assemblyTotalCost. Sets ex:assemblyCostCalculated on assembly."
  inputs:
    - name: "rear_wall_assembly_uri"
      mapsToRdfProperty: "ex:createdRearWallAssemblyURI"
      datatype: "xsd:anyURI"
      isRequired: true
  outputs:
    - name: "assembly_cost_calculated_flag"
      mapsToRdfProperty: "ex:assemblyCostCalculated" # On the RearWallAssembly
      datatype: "xsd:boolean"
  implementation:
    type: "kce:PythonScriptInvocation"
    scriptPath: "../scripts/sum_assembly_costs.py"
